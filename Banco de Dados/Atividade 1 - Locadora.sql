-- DDL: criação do banco de dados e tabelas com suas relações

CREATE DATABASE locadora

CREATE TABLE ENDERECO (
    COD_END SERIAL NOT NULL PRIMARY KEY,
    LOGRADOURO VARCHAR(40),
    TIPO_LOG VARCHAR(40),
    COMPLEMENTO VARCHAR(20),
    CIDADE VARCHAR(60),
    UF VARCHAR(2),
    CEP VARCHAR(8),
    NUMERO VARCHAR(10),
    BAIRRO VARCHAR(60)
)

	
CREATE TABLE PROFISSAO (
    COD_PROF SERIAL NOT NULL PRIMARY KEY,
    NOME VARCHAR(60)
)

	
CREATE TABLE CLIENTE (
    COD_CLI SERIAL NOT NULL PRIMARY KEY,
    CPF VARCHAR(11),
    NOME VARCHAR(60),
    TELEFONE VARCHAR(10),
    COD_PROF INT,
    FOREIGN KEY (COD_PROF) REFERENCES PROFISSAO(COD_PROF)
)

	
CREATE TABLE DEPENDENTE (
    COD_CLI SERIAL NOT NULL,
    COD_DEP SERIAL NOT NULL,
    PARENTESCO VARCHAR(20),
    PRIMARY KEY (COD_CLI, COD_DEP),
    FOREIGN KEY (COD_CLI) REFERENCES CLIENTE(COD_CLI)
)

	
CREATE TABLE CLI_ENDERECO (
    COD_END SERIAL NOT NULL,
    COD_CLI SERIAL NOT NULL,
    PRIMARY KEY (COD_END, COD_CLI),
    FOREIGN KEY (COD_END) REFERENCES ENDERECO(COD_END),
    FOREIGN KEY (COD_CLI) REFERENCES CLIENTE(COD_CLI)
)

	
CREATE TABLE CATEGORIA (
    COD_CAT SERIAL NOT NULL PRIMARY KEY,
    NOME VARCHAR(60),
    VALOR MONEY
)


CREATE TABLE GENERO (
    COD_GEN SERIAL NOT NULL PRIMARY KEY,
    NOME VARCHAR(60)
)


CREATE TABLE ATOR (
    COD_ATOR SERIAL NOT NULL PRIMARY KEY,
    NOME VARCHAR(60)
)


CREATE TABLE FILMES (
    COD_FILME SERIAL NOT NULL PRIMARY KEY,
    TITULO_ORIGINAL VARCHAR(100),
    TITULO VARCHAR(100),
    QUANTIDADE INT,
    COD_CAT SERIAL,
    COD_GEN SERIAL,
    FOREIGN KEY (COD_CAT) REFERENCES CATEGORIA(COD_CAT),
    FOREIGN KEY (COD_GEN) REFERENCES GENERO(COD_GEN)
)


CREATE TABLE FILME_ATOR (
    COD_ATOR SERIAL NOT NULL,
    COD_FILME SERIAL NOT NULL,
    DIRETOR VARCHAR(40),
    PRIMARY KEY (COD_ATOR, COD_FILME),
    FOREIGN KEY (COD_ATOR) REFERENCES ATOR(COD_ATOR),
    FOREIGN KEY (COD_FILME) REFERENCES FILMES(COD_FILME)
)


CREATE TABLE LOCACAO (
    COD_LOC SERIAL NOT NULL PRIMARY KEY,
    DATA_LOC DATE,
    DESCONTO MONEY,
    MULTA MONEY,
    SUB_TOTAL MONEY,
    COD_CLI SERIAL NOT NULL,
    FOREIGN KEY (COD_CLI) REFERENCES CLIENTE(COD_CLI)
)


CREATE TABLE LOCACAO_FILME (
    COD_LOC SERIAL NOT NULL,
    COD_FILME SERIAL NOT NULL,
    NUM_DIAS INT,
    DATA_DEVOL DATE,
    PRIMARY KEY (COD_LOC, COD_FILME),
    FOREIGN KEY (COD_LOC) REFERENCES LOCACAO(COD_LOC),
    FOREIGN KEY (COD_FILME) REFERENCES FILMES(COD_FILME)
)


-- DML: inserção de 15 filmes, 10 clientes e 20 locações  

-- Inserindo categorias 
INSERT INTO CATEGORIA (NOME, VALOR) VALUES ('Drama', 3.50);
INSERT INTO CATEGORIA (NOME, VALOR) VALUES ('Crime', 4.00);
INSERT INTO CATEGORIA (NOME, VALOR) VALUES ('Ação', 5.00);
INSERT INTO CATEGORIA (NOME, VALOR) VALUES ('Comédia', 3.00);
INSERT INTO CATEGORIA (NOME, VALOR) VALUES ('Aventura', 4.50);
INSERT INTO CATEGORIA (NOME, VALOR) VALUES ('Romance', 3.20);
INSERT INTO CATEGORIA (NOME, VALOR) VALUES ('Ficção Científica', 5.50);
INSERT INTO CATEGORIA (NOME, VALOR) VALUES ('Suspense', 4.20);
INSERT INTO CATEGORIA (NOME, VALOR) VALUES ('Fantasia', 4.80);
INSERT INTO CATEGORIA (NOME, VALOR) VALUES ('Terror', 3.80)
	
SELECT * FROM CATEGORIA


-- Inserindo generos 
INSERT INTO GENERO (NOME) VALUES ('Drama');
INSERT INTO GENERO (NOME) VALUES ('Crime');
INSERT INTO GENERO (NOME) VALUES ('Ação');
INSERT INTO GENERO (NOME) VALUES ('Comédia');
INSERT INTO GENERO (NOME) VALUES ('Aventura');
INSERT INTO GENERO (NOME) VALUES ('Romance');
INSERT INTO GENERO (NOME) VALUES ('Romance');
INSERT INTO GENERO (NOME) VALUES ('Suspense');
INSERT INTO GENERO (NOME) VALUES ('Fantasia');
INSERT INTO GENERO (NOME) VALUES ('Terror')
	
SELECT * FROM GENERO


-- Inserindo filmes
INSERT INTO FILMES (TITULO_ORIGINAL, TITULO, QUANTIDADE, COD_CAT, COD_GEN) VALUES ('Titanic', 'Titanic', 10, 6, 1);
INSERT INTO FILMES (TITULO_ORIGINAL, TITULO, QUANTIDADE, COD_CAT, COD_GEN) VALUES ('Avatar', 'Avatar', 12, 7, 5);
INSERT INTO FILMES (TITULO_ORIGINAL, TITULO, QUANTIDADE, COD_CAT, COD_GEN) VALUES ('Gladiator', 'Gladiador', 8, 10, 3);
INSERT INTO FILMES (TITULO_ORIGINAL, TITULO, QUANTIDADE, COD_CAT, COD_GEN) VALUES ('The Lion King', 'O Rei Leão', 15, 7, 9);
INSERT INTO FILMES (TITULO_ORIGINAL, TITULO, QUANTIDADE, COD_CAT, COD_GEN) VALUES ('The Godfather Part II', 'O Poderoso Chefão: Parte II', 7, 2, 2);
INSERT INTO FILMES (TITULO_ORIGINAL, TITULO, QUANTIDADE, COD_CAT, COD_GEN) VALUES ('The Prestige', 'O Grande Truque', 6, 8, 4);
INSERT INTO FILMES (TITULO_ORIGINAL, TITULO, QUANTIDADE, COD_CAT, COD_GEN) VALUES ('Memento', 'Amnésia', 5, 4, 8);
INSERT INTO FILMES (TITULO_ORIGINAL, TITULO, QUANTIDADE, COD_CAT, COD_GEN) VALUES ('Braveheart', 'Coração Valente', 9, 8, 5);
INSERT INTO FILMES (TITULO_ORIGINAL, TITULO, QUANTIDADE, COD_CAT, COD_GEN) VALUES ('Joker', 'Coringa', 10, 8, 2);
INSERT INTO FILMES (TITULO_ORIGINAL, TITULO, QUANTIDADE, COD_CAT, COD_GEN) VALUES ('La La Land', 'La La Land: Cantando Estações', 11, 6, 6);
INSERT INTO FILMES (TITULO_ORIGINAL, TITULO, QUANTIDADE, COD_CAT, COD_GEN) VALUES ('Up', 'Up: Altas Aventuras', 13, 3, 9);
INSERT INTO FILMES (TITULO_ORIGINAL, TITULO, QUANTIDADE, COD_CAT, COD_GEN) VALUES ('The Incredibles', 'Os Incríveis', 14, 9, 7);
INSERT INTO FILMES (TITULO_ORIGINAL, TITULO, QUANTIDADE, COD_CAT, COD_GEN) VALUES ('Coco', 'Viva: A Vida é uma Festa', 12, 6, 9);
INSERT INTO FILMES (TITULO_ORIGINAL, TITULO, QUANTIDADE, COD_CAT, COD_GEN) VALUES ('Whiplash', 'Whiplash: Em Busca da Perfeição', 8, 1, 6);
INSERT INTO FILMES (TITULO_ORIGINAL, TITULO, QUANTIDADE, COD_CAT, COD_GEN) VALUES ('Django Unchained', 'Django Livre', 10, 4, 3)

SELECT * FROM FILMES


-- Inserindo profissões 
INSERT INTO PROFISSAO (NOME) VALUES ('Médico');
INSERT INTO PROFISSAO (NOME) VALUES ('Professor');
INSERT INTO PROFISSAO (NOME) VALUES ('Engenheiro');
INSERT INTO PROFISSAO (NOME) VALUES ('Advogado');
INSERT INTO PROFISSAO (NOME) VALUES ('Programador');
INSERT INTO PROFISSAO (NOME) VALUES ('Designer');
INSERT INTO PROFISSAO (NOME) VALUES ('Arquiteto');
INSERT INTO PROFISSAO (NOME) VALUES ('Contador');
INSERT INTO PROFISSAO (NOME) VALUES ('Psicólogo');
INSERT INTO PROFISSAO (NOME) VALUES ('Enfermeiro')

SELECT * FROM PROFISSAO

	
-- Inserindo clientes 
INSERT INTO CLIENTE (CPF, NOME, TELEFONE, COD_PROF) VALUES ('12345678901', 'João Silva', '1198765432', 1);
INSERT INTO CLIENTE (CPF, NOME, TELEFONE, COD_PROF) VALUES ('23456789012', 'Maria Oliveira', '2198765432', 2);
INSERT INTO CLIENTE (CPF, NOME, TELEFONE, COD_PROF) VALUES ('34567890123', 'Pedro Santos', '3198765432', 3);
INSERT INTO CLIENTE (CPF, NOME, TELEFONE, COD_PROF) VALUES ('45678901234', 'Ana Costa', '4198765432', 4);
INSERT INTO CLIENTE (CPF, NOME, TELEFONE, COD_PROF) VALUES ('56789012345', 'Lucas Lima', '5198765432', 5);
INSERT INTO CLIENTE (CPF, NOME, TELEFONE, COD_PROF) VALUES ('67890123456', 'Carla Mendes', '6198765432', 6);
INSERT INTO CLIENTE (CPF, NOME, TELEFONE, COD_PROF) VALUES ('78901234567', 'Paulo Sousa', '7198765432', 7);
INSERT INTO CLIENTE (CPF, NOME, TELEFONE, COD_PROF) VALUES ('89012345678', 'Fernanda Ribeiro', '8198765432', 8);
INSERT INTO CLIENTE (CPF, NOME, TELEFONE, COD_PROF) VALUES ('90123456789', 'Carlos Almeida', '9198765432', 9);
INSERT INTO CLIENTE (CPF, NOME, TELEFONE, COD_PROF) VALUES ('01234567890', 'Juliana Ferreira', '3198765432', 10)

SELECT * FROM CLIENTE

-- Inserindo endereços
INSERT INTO ENDERECO (LOGRADOURO, TIPO_LOG, COMPLEMENTO, CIDADE, UF, CEP, NUMERO, BAIRRO) VALUES ('Avenida Paulista', 'Avenida', 'Apto 101', 'São Paulo', 'SP', '01310200', '1578', 'Bela Vista');
INSERT INTO ENDERECO (LOGRADOURO, TIPO_LOG, COMPLEMENTO, CIDADE, UF, CEP, NUMERO, BAIRRO) VALUES ('Rua das Flores', 'Rua', 'Casa', 'Rio de Janeiro', 'RJ', '20021020', '320', 'Centro');
INSERT INTO ENDERECO (LOGRADOURO, TIPO_LOG, COMPLEMENTO, CIDADE, UF, CEP, NUMERO, BAIRRO) VALUES ('Praça da Liberdade', 'Praça', 'Bloco B', 'Belo Horizonte', 'MG', '30140010', '15', 'Funcionários');
INSERT INTO ENDERECO (LOGRADOURO, TIPO_LOG, COMPLEMENTO, CIDADE, UF, CEP, NUMERO, BAIRRO) VALUES ('Avenida Brasil', 'Avenida', 'Sala 500', 'Curitiba', 'PR', '80050200', '1234', 'Jardim das Américas');
INSERT INTO ENDERECO (LOGRADOURO, TIPO_LOG, COMPLEMENTO, CIDADE, UF, CEP, NUMERO, BAIRRO) VALUES ('Rua 25 de Março', 'Rua', 'Loja 12', 'São Paulo', 'SP', '01021000', '450', 'Centro');
INSERT INTO ENDERECO (LOGRADOURO, TIPO_LOG, COMPLEMENTO, CIDADE, UF, CEP, NUMERO, BAIRRO) VALUES ('Rua XV de Novembro', 'Rua', 'Cobertura', 'Florianópolis', 'SC', '88015000', '980', 'Centro');
INSERT INTO ENDERECO (LOGRADOURO, TIPO_LOG, COMPLEMENTO, CIDADE, UF, CEP, NUMERO, BAIRRO) VALUES ('Avenida Boa Viagem', 'Avenida', 'Apto 204', 'Recife', 'PE', '51020100', '200', 'Boa Viagem');
INSERT INTO ENDERECO (LOGRADOURO, TIPO_LOG, COMPLEMENTO, CIDADE, UF, CEP, NUMERO, BAIRRO) VALUES ('Rua das Palmeiras', 'Rua', 'Casa 5', 'Porto Alegre', 'RS', '90020100', '770', 'Moinhos de Vento');
INSERT INTO ENDERECO (LOGRADOURO, TIPO_LOG, COMPLEMENTO, CIDADE, UF, CEP, NUMERO, BAIRRO) VALUES ('Avenida Goiás', 'Avenida', 'Sala 305', 'Goiânia', 'GO', '74020100', '1150', 'Setor Central');
INSERT INTO ENDERECO (LOGRADOURO, TIPO_LOG, COMPLEMENTO, CIDADE, UF, CEP, NUMERO, BAIRRO) VALUES ('Rua Augusta', 'Rua', 'Apto 302', 'São Paulo', 'SP', '01413000', '128', 'Consolação');


-- Inserindo locação 
INSERT INTO LOCACAO (DATA_LOC, DESCONTO, MULTA, SUB_TOTAL, COD_CLI) VALUES ('2024-06-01', 10.00, 5.00, 100.00, 2);
INSERT INTO LOCACAO (DATA_LOC, DESCONTO, MULTA, SUB_TOTAL, COD_CLI) VALUES ('2024-06-02', 0.00, 0.00, 80.00, 2);
INSERT INTO LOCACAO (DATA_LOC, DESCONTO, MULTA, SUB_TOTAL, COD_CLI) VALUES ('2024-06-03', 15.00, 8.00, 120.00, 3);
INSERT INTO LOCACAO (DATA_LOC, DESCONTO, MULTA, SUB_TOTAL, COD_CLI) VALUES ('2024-06-04', 5.00, 0.00, 90.00, 4);
INSERT INTO LOCACAO (DATA_LOC, DESCONTO, MULTA, SUB_TOTAL, COD_CLI) VALUES ('2024-06-05', 0.00, 10.00, 110.00, 5);
INSERT INTO LOCACAO (DATA_LOC, DESCONTO, MULTA, SUB_TOTAL, COD_CLI) VALUES ('2024-06-06', 20.00, 15.00, 130.00, 8);
INSERT INTO LOCACAO (DATA_LOC, DESCONTO, MULTA, SUB_TOTAL, COD_CLI) VALUES ('2024-06-07', 0.00, 0.00, 100.00, 2);
INSERT INTO LOCACAO (DATA_LOC, DESCONTO, MULTA, SUB_TOTAL, COD_CLI) VALUES ('2024-06-08', 25.00, 20.00, 150.00, 3);
INSERT INTO LOCACAO (DATA_LOC, DESCONTO, MULTA, SUB_TOTAL, COD_CLI) VALUES ('2024-06-09', 8.00, 3.00, 95.00, 4);
INSERT INTO LOCACAO (DATA_LOC, DESCONTO, MULTA, SUB_TOTAL, COD_CLI) VALUES ('2024-06-10', 0.00, 0.00, 85.00, 5)

SELECT * FROM LOCACAO


-- Inserindo locações de filmes
INSERT INTO LOCACAO_FILME (COD_LOC, COD_FILME, NUM_DIAS, DATA_DEVOL) VALUES (2, 12, 3, '2024-06-01');
INSERT INTO LOCACAO_FILME (COD_LOC, COD_FILME, NUM_DIAS, DATA_DEVOL) VALUES (11, 26, 2, '2024-06-02');
INSERT INTO LOCACAO_FILME (COD_LOC, COD_FILME, NUM_DIAS, DATA_DEVOL) VALUES (2, 13, 4, '2024-06-03');
INSERT INTO LOCACAO_FILME (COD_LOC, COD_FILME, NUM_DIAS, DATA_DEVOL) VALUES (2, 14, 1, '2024-06-04');
INSERT INTO LOCACAO_FILME (COD_LOC, COD_FILME, NUM_DIAS, DATA_DEVOL) VALUES (3, 15, 2, '2024-06-05');
INSERT INTO LOCACAO_FILME (COD_LOC, COD_FILME, NUM_DIAS, DATA_DEVOL) VALUES (3, 16, 3, '2024-06-06');
INSERT INTO LOCACAO_FILME (COD_LOC, COD_FILME, NUM_DIAS, DATA_DEVOL) VALUES (4, 17, 5, '2024-06-07');
INSERT INTO LOCACAO_FILME (COD_LOC, COD_FILME, NUM_DIAS, DATA_DEVOL) VALUES (4, 18, 2, '2024-06-08');
INSERT INTO LOCACAO_FILME (COD_LOC, COD_FILME, NUM_DIAS, DATA_DEVOL) VALUES (5, 19, 3, '2024-06-09');
INSERT INTO LOCACAO_FILME (COD_LOC, COD_FILME, NUM_DIAS, DATA_DEVOL) VALUES (5, 17, 1, '2024-06-10');
INSERT INTO LOCACAO_FILME (COD_LOC, COD_FILME, NUM_DIAS, DATA_DEVOL) VALUES (6, 16, 2, '2024-06-11');
INSERT INTO LOCACAO_FILME (COD_LOC, COD_FILME, NUM_DIAS, DATA_DEVOL) VALUES (6, 12, 4, '2024-06-12');
INSERT INTO LOCACAO_FILME (COD_LOC, COD_FILME, NUM_DIAS, DATA_DEVOL) VALUES (7, 13, 1, '2024-06-13');
INSERT INTO LOCACAO_FILME (COD_LOC, COD_FILME, NUM_DIAS, DATA_DEVOL) VALUES (7, 14, 3, '2024-06-14');
INSERT INTO LOCACAO_FILME (COD_LOC, COD_FILME, NUM_DIAS, DATA_DEVOL) VALUES (8, 15, 2, '2024-06-15');
INSERT INTO LOCACAO_FILME (COD_LOC, COD_FILME, NUM_DIAS, DATA_DEVOL) VALUES (8, 16, 4, '2024-06-16');
INSERT INTO LOCACAO_FILME (COD_LOC, COD_FILME, NUM_DIAS, DATA_DEVOL) VALUES (9, 17, 3, '2024-06-17');
INSERT INTO LOCACAO_FILME (COD_LOC, COD_FILME, NUM_DIAS, DATA_DEVOL) VALUES (9, 18, 1, '2024-06-18');
INSERT INTO LOCACAO_FILME (COD_LOC, COD_FILME, NUM_DIAS, DATA_DEVOL) VALUES (10, 19, 2, '2024-06-19');
INSERT INTO LOCACAO_FILME (COD_LOC, COD_FILME, NUM_DIAS, DATA_DEVOL) VALUES (10, 20, 3, '2024-06-20')

SELECT * FROM LOCACAO_FILME


-- Lista de exercícios
	
-- 1  - Listar todos os filmes alugados por um cliente específico, incluindo a data de locação e a data de devolução.

SELECT C.NOME AS Nome_Cliente, F.TITULO AS Titulo_Filme, L.DATA_LOC AS Data_Locacao, LF.DATA_DEVOL AS Data_Devolucao
FROM LOCACAO L
INNER JOIN LOCACAO_FILME LF ON L.COD_LOC = LF.COD_LOC INNER JOIN FILMES F ON LF.COD_FILME = F.COD_FILME INNER JOIN CLIENTE C ON L.COD_CLI = C.COD_CLI
WHERE L.COD_CLI = 2 
ORDER BY L.DATA_LOC, LF.DATA_DEVOL

	
-- 2  - Obter uma lista de clientes e seus dependentes.
SELECT C.NOME AS Nome_Cliente, CD.NOME AS Nome_Depend, D.PARENTESCO AS Parentesco
FROM CLIENTE C
LEFT JOIN DEPENDENTE D ON C.COD_CLI = D.COD_CLI LEFT JOIN CLIENTE CD ON D.COD_DEP = CD.COD_CLI
ORDER BY C.NOME, CD.NOME

	
-- 3  - Listar todos os filmes de um determinado gênero.
SELECT F.TITULO_ORIGINAL AS Titulo_Original, F.TITULO AS Titulo, G.NOME AS Genero
FROM FILMES F
INNER JOIN GENERO G ON F.COD_GEN = G.COD_GEN
WHERE G.NOME = 'Comédia'
ORDER BY F.TITULO

	
-- 4  - Exibir todos os clientes que têm uma profissão específica.
SELECT C.NOME AS Nome_Cliente, C.CPF AS CPF_Cliente, C.TELEFONE AS Telefone_Cliente, P.NOME AS Profissao
FROM CLIENTE C
INNER JOIN PROFISSAO P ON C.COD_PROF = P.COD_PROF
WHERE P.NOME = 'Professor'
ORDER BY C.NOME


-- 5  - Encontrar todos os filmes em uma categoria específica com quantidade disponível maior que 5.
SELECT F.TITULO_ORIGINAL AS Titulo_Original, F.TITULO AS Titulo, F.QUANTIDADE AS Quantidade, C.NOME AS Categoria
FROM FILMES F INNER JOIN CATEGORIA C ON F.COD_CAT = C.COD_CAT
WHERE C.NOME = 'Drama' AND F.QUANTIDADE > 5
ORDER BY F.TITULO

	
-- 6  - Listar todos os atores que participaram de filmes com um determinado título.
SELECT A.NOME AS Nome_Ator, F.TITULO AS Titulo_Filme
FROM ATOR A
INNER JOIN FILME_ATOR FA ON A.COD_ATOR = FA.COD_ATOR INNER JOIN FILMES F ON FA.COD_FILME = F.COD_FILME
WHERE F.TITULO = 'Whiplash: Em Busca da Perfeição'
ORDER BY A.NOME

	
-- 7  - Obter o endereço completo de um cliente específico.
SELECT C.NOME AS Nome_Cliente, E.LOGRADOURO AS Logradouro, E.TIPO_LOG AS Tipo_Logradouro, E.NUMERO AS Numero, E.COMPLEMENTO AS Complemento, 
E.BAIRRO AS Bairro, E.CIDADE AS Cidade, E.UF AS UF, E.CEP AS CEP
FROM CLIENTE C
INNER JOIN CLI_ENDERECO CE ON C.COD_CLI = CE.COD_CLI INNER JOIN ENDERECO E ON CE.COD_END = E.COD_END
WHERE C.NOME = 'Lucas Lima'


-- 8  - Listar todos os filmes e seus respectivos gêneros e categorias.
SELECT F.TITULO_ORIGINAL AS Titulo_Original,F.TITULO AS Titulo,G.NOME AS Genero,C.NOME AS Categoria
FROM FILMES F
INNER JOIN GENERO G ON F.COD_GEN = G.COD_GEN INNER JOIN CATEGORIA C ON F.COD_CAT = C.COD_CAT
ORDER BY F.TITULO


-- 9  - Mostrar todos os clientes que alugaram um filme específico e a data de locação.
SELECT C.NOME AS Nome_Cliente, L.DATA_LOC AS Data_Locacao, F.TITULO AS Titulo_Filme
FROM CLIENTE C
INNER JOIN LOCACAO L ON C.COD_CLI = L.COD_CLI INNER JOIN LOCACAO_FILME LF ON L.COD_LOC = LF.COD_LOC INNER JOIN FILMES F ON LF.COD_FILME = F.COD_FILME
WHERE F.TITULO = 'Titanic'


-- 10 - Exibir a lista de clientes com multas superiores a um valor específico.
SELECT C.NOME AS Nome_Cliente, L.MULTA AS Valor_Multa
FROM CLIENTE C
INNER JOIN LOCACAO L ON C.COD_CLI = L.COD_CLI
WHERE L.MULTA > '5.00'::money


-- 11 - Listar todas as locações feitas em um período específico.
SELECT L.COD_LOC, L.DATA_LOC, L.DESCONTO, L.MULTA, L.SUB_TOTAL, C.NOME AS Nome_Cliente
FROM LOCACAO L
INNER JOIN CLIENTE C ON L.COD_CLI = C.COD_CLI
WHERE L.DATA_LOC BETWEEN '2024-06-01' AND '2024-06-10'


-- 12 - Obter a quantidade total de filmes alugados por cada cliente. (DESAFIO)
SELECT C.COD_CLI, C.NOME AS Nome_Cliente,
COUNT(LF.COD_FILME) AS Quantidade_Filmes_Alugados
FROM CLIENTE C
LEFT JOIN LOCACAO L ON C.COD_CLI = L.COD_CLI LEFT JOIN LOCACAO_FILME LF ON L.COD_LOC = LF.COD_LOC
GROUP BY C.COD_CLI, C.NOME
ORDER BY C.NOME


-- 13 - Listar os clientes e os filmes que eles alugaram, ordenados por data de locação.
SELECT C.NOME AS Nome_Cliente, F.TITULO AS Titulo_Filme, L.DATA_LOC AS Data_Locacao
FROM CLIENTE C
JOIN LOCACAO L ON C.COD_CLI = L.COD_CLI JOIN LOCACAO_FILME LF ON L.COD_LOC = LF.COD_LOC JOIN FILMES F ON LF.COD_FILME = F.COD_FILME
ORDER BY L.DATA_LOC


-- 14 - Mostrar todos os clientes que moram em uma cidade específica e que alugaram filmes de uma categoria específica.
SELECT DISTINCT CLI.NOME AS Nome_Cliente, ENDERECO.CIDADE, CATEGORIA.NOME AS Nome_Categoria
FROM CLIENTE CLI
JOIN CLI_ENDERECO ON CLI.COD_CLI = CLI_ENDERECO.COD_CLI JOIN ENDERECO ON CLI_ENDERECO.COD_END = ENDERECO.COD_END JOIN LOCACAO ON CLI.COD_CLI = LOCACAO.COD_CLI
JOIN LOCACAO_FILME ON LOCACAO.COD_LOC = LOCACAO_FILME.COD_LOC JOIN FILMES ON LOCACAO_FILME.COD_FILME = FILMES.COD_FILME JOIN CATEGORIA ON FILMES.COD_CAT = CATEGORIA.COD_CAT
WHERE ENDERECO.CIDADE = 'São Paulo' AND CATEGORIA.NOME = 'Romance'


-- 15 - Encontrar todos os atores que participaram de pelo menos 5 filmes, listando o nome do ator e o número de filmes em que atuou. (DESAFIO)
SELECT A.NOME AS Nome_Ator,
COUNT(FA.COD_FILME) AS Numero_Filmes FROM ATOR A
JOIN FILME_ATOR FA ON A.COD_ATOR = FA.COD_ATOR
GROUP BY A.NOME HAVING COUNT(FA.COD_FILME) >= 5 ORDER BY Numero_Filmes DESC


-- 16 - Exibir a quantidade total de filmes alugados por categoria e gênero, incluindo apenas as categorias e gêneros que têm mais de 5 filmes alugados no total (DESAFIO)
SELECT CAT.NOME AS Categoria, GEN.NOME AS Genero,
COUNT(LF.COD_FILME) AS Quantidade_Filmes_Alugados FROM CATEGORIA CAT
JOIN FILMES F ON CAT.COD_CAT = F.COD_CAT JOIN GENERO GEN ON F.COD_GEN = GEN.COD_GEN JOIN LOCACAO_FILME LF ON F.COD_FILME = LF.COD_FILME
GROUP BY CAT.NOME, GEN.NOME HAVING COUNT(LF.COD_FILME) > 1




